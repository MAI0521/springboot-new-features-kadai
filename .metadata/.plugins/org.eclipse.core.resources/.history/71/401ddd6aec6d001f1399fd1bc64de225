package com.example.samuraitravel.service;

import java.time.LocalDate;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.example.samuraitravel.entity.House;
import com.example.samuraitravel.entity.Reservation;
import com.example.samuraitravel.entity.Review;
import com.example.samuraitravel.entity.User;
import com.example.samuraitravel.form.ReviewForm;
import com.example.samuraitravel.repository.ReviewRepository;
import com.example.samuraitravel.repository.HouseRepository;
import com.example.samuraitravel.repository.UserRepository;

 

@Service
public class ReviewService {

    @Autowired
    private ReviewRepository reviewRepository;

    public Page<Review> getReviewsForHouse(House house, int page, int size) {
        return reviewRepository.findByHouseOrderByCreatedAtDesc(house, PageRequest.of(page, size));
    }
    
    @Transactional
    public Review create(Map<String, String> reviewIntentObject) {
        Review review = new Review();
        Integer houseId = Integer.valueOf(reviewIntentObject.get("houseId"));
        Integer userId = Integer.valueOf(reviewIntentObject.get("userId"));
        
        House house = houseRepository.getReferenceById(houseId); 
        User user = userRepository.getReferenceById(userId);
        
        review.setHouse(house);
        review.setUser(user);
        review.setStarId(reviewForm.getStarId());
        review.setComment(reviewForm.getComment());
        review.setHouse(house);
      
        return reviewRepository.save(review);
    }  
    
    public void create1(Map<String, String> paymentIntentObject) {
   	 Reservation reservation = new Reservation();
   	 
   	 Integer houseId = Integer.valueOf(paymentIntentObject.get("houseId"));
        Integer userId = Integer.valueOf(paymentIntentObject.get("userId"));
        
        House house = houseRepository.getReferenceById(houseId); 
        User user = userRepository.getReferenceById(userId);
        LocalDate checkinDate = LocalDate.parse(paymentIntentObject.get("checkinDate"));
        LocalDate checkoutDate = LocalDate.parse(paymentIntentObject.get("checkoutDate"));
        Integer numberOfPeople = Integer.valueOf(paymentIntentObject.get("numberOfPeople"));        
        Integer amount = Integer.valueOf(paymentIntentObject.get("amount")); 
                
        reservation.setHouse(house);
        reservation.setUser(user);
        reservation.setCheckinDate(checkinDate);
        reservation.setCheckoutDate(checkoutDate);
        reservation.setNumberOfPeople(numberOfPeople);
        reservation.setAmount(amount);
        
        reservationRepository.save(reservation);
    }  
}