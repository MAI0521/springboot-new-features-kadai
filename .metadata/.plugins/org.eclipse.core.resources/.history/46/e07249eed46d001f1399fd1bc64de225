package com.example.samuraitravel.controller;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.web.PageableDefault;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;

import com.example.samuraitravel.entity.House;
import com.example.samuraitravel.entity.Review;
import com.example.samuraitravel.repository.HouseRepository;
import com.example.samuraitravel.repository.ReviewRepository;
import com.example.samuraitravel.repository.UserRepository;
import com.example.samuraitravel.service.ReviewService;

@Controller
@RequestMapping("/houses/{id}/reviews")
public class ReviewController {
	 private final ReviewRepository reviewRepository;    
	 private final HouseRepository houseRepository;
	 private final UserRepository userRepository;
     private final ReviewService reviewService; 
    
     public ReviewController(ReviewRepository reviewRepository, HouseRepository houseRepository, UserRepository userRepository, ReviewService reviewService) {        
        this.reviewRepository = reviewRepository; 
        this.houseRepository = houseRepository;
        this.userRepository = userRepository;
        this.reviewService = reviewService;
    }
     
     @GetMapping()
     public String getReviews(@PathVariable(name = "id") Integer id,@PageableDefault(page = 0, size = 10) Pageable pageable, Model model) {
    	 House house = houseRepository.findById(id).orElse(null);
    	 Page<Review> review = reviewRepository.findByHouseOrderByCreatedAtDesc(house, pageable);
                
         
    	 if (house != null) {
             model.addAttribute("house", house);
         } else {
             // Handle the case where the house is not found
             return "error/404";
         }
    	 model.addAttribute("review",review); 
    	 
         return "reviews/index";
     }
     
 }
