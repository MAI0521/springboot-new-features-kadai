package com.example.samuraitravel.controller;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.data.web.PageableDefault;
import org.springframework.http.ResponseEntity;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.example.samuraitravel.entity.House;
import com.example.samuraitravel.entity.Review;
import com.example.samuraitravel.form.ReviewForm;
import com.example.samuraitravel.repository.HouseRepository;
import com.example.samuraitravel.repository.ReviewRepository;
import com.example.samuraitravel.repository.UserRepository;
import com.example.samuraitravel.security.UserDetailsImpl;
import com.example.samuraitravel.service.ReviewService;

@Controller
@RequestMapping("/houses/{id}/reviews")
public class ReviewController {
	 private final ReviewRepository reviewRepository;    
	 private final HouseRepository houseRepository;
	 private final UserRepository userRepository;
     private final ReviewService reviewService; 
    
     public ReviewController(ReviewRepository reviewRepository, HouseRepository houseRepository, UserRepository userRepository, ReviewService reviewService) {        
        this.reviewRepository = reviewRepository; 
        this.houseRepository = houseRepository;
        this.userRepository = userRepository;
        this.reviewService = reviewService;
    }
     
     @GetMapping()
     public String getReviews(@PathVariable(name = "id") Integer id,
    		 @RequestParam(name = "page", defaultValue = "0") int page,
    		 @PageableDefault(page = 0, size = 10) Pageable pageable, Model model) {
    	 House house = houseRepository.findById(id).orElse(null);
//    	 Page<Review> reviewPage = reviewRepository.findByHouseOrderByCreatedAtDesc(house, pageable);
//    	 Page<Review> review = reviewRepository.findByHouseOrderByCreatedAtDesc(house, pageable);       
         
    	 if (house != null) {
    		 Page<Review> reviewPage = reviewRepository.findByHouseOrderByCreatedAtDesc(house, PageRequest.of(page, 10));
    	        model.addAttribute("house", house);
    	        model.addAttribute("reviewPage", reviewPage);
    	        model.addAttribute("review",reviewPage);
    	        return "reviews/index";
    	    } else {
    	        return "error/404"; 
    	    }
     }
     
     @GetMapping("/input")
     public String input(@PathVariable(name = "id") Integer id,
                         @ModelAttribute @Validated ReviewForm reviewForm,
                         BindingResult bindingResult,
                         Model model)
     {   
    	 House house = houseRepository.findById(id).orElse(null);
    	 if (house != null) {
             model.addAttribute("house", house);
             model.addAttribute("reviewForm", reviewForm);
             return "reviews/input";
         } else {
             return "error/404";
         }
     }
     
     @PostMapping("/input")
     public ResponseEntity<Void> submitReview(@AuthenticationPrincipal UserDetailsImpl userDetailsImpl,
    		 @RequestBody @ModelAttribute ReviewForm reviewForm) {
         reviewService.create(userDetailsImpl, reviewForm);
         return ResponseEntity.ok().build();
     }
 }
